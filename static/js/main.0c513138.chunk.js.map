{"version":3,"sources":["components/Sidebar.js","components/Main.js","App.js","index.js"],"names":["Sidebar","_ref","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","react_default","createElement","className","onClick","map","note","concat","id","title","body","substr","Date","toLocaleDateString","hour","minute","hour12","Main","onUpdateNote","onEditField","key","value","_objectSpread2","Object","objectSpread2","defineProperty","now","type","onChange","e","target","autoFocus","placeholder","react_markdown","App","_useState","useState","localStorage","JSON","parse","_useState2","slicedToArray","setNotes","_useState3","_useState4","useEffect","setItem","stringify","components_Sidebar","newNote","uuid","toConsumableArray","noteId","filter","components_Main","find","updateNote","updatedNoteArray","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c513138.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Sidebar = ({notes, onAddNote, onDeleteNote, activeNote, setActiveNote}) => {\r\n    const sortedNotes = notes.sort((a, b) => b.lastModified -a.lastModified)\r\n\r\n  return (\r\n    <div className='app-sidebar'>\r\n        <div className='app-sidebar-header'>\r\n            <h1>Notes</h1>\r\n            <button onClick={onAddNote}>Add</button>\r\n        </div>\r\n        <div className='app-sidebar-notes'>\r\n            {sortedNotes.map((note) => {\r\n                return (\r\n                    <div className={`app-sidebar-note ${activeNote === note.id && 'active'}`} onClick={() => setActiveNote(note.id)}>\r\n                    \r\n                        <div className='sidebar-note-title'>\r\n                            <strong>{note.title}</strong>\r\n                            <button onClick={() => onDeleteNote(note.id)}>Delete</button>\r\n                        </div>\r\n                        <p>{note.body && note.body.substr(0, 100) + '...'}</p>\r\n                        <small className='note-meta'>\r\n                            last modified {new Date(note.lastModified).toLocaleDateString('en-GB', {\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                                hour12: true\r\n                            })}\r\n                        </small>\r\n                    </div>\r\n                );\r\n            })};\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst Main = ({activeNote, onUpdateNote}) => {\r\n\r\n    const onEditField = (key, value) => {\r\n        onUpdateNote({\r\n            ...activeNote,\r\n            [key]: value,\r\n            lastModified: Date.now()\r\n\r\n        })\r\n    };\r\n\r\n    if(!activeNote){\r\n        return <h1 className='no-active-note'>No Note Selected</h1>\r\n    }\r\n\r\n    return (\r\n        <div className='app-main'>\r\n            <div className='app-main-note-edit'>\r\n                <input type='text' id='title' value={activeNote.title} onChange={(e) => onEditField('title', e.target.value)}  autoFocus />\r\n                <textarea id='body' value={activeNote.body} onChange={(e) => onEditField('body', e.target.value)} placeholder='Write your note here...' />\r\n            </div>\r\n            <div className='app-main-note-preview'>\r\n                <h1 className='preview-title'>{activeNote.title}</h1>\r\n                <ReactMarkdown className='markdown-preview'>{activeNote.body}</ReactMarkdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import './App.css';\nimport uuid from 'react-uuid'\nimport Sidebar from './components/Sidebar';\nimport Main from './components/Main';\nimport React,{ useState, useEffect } from 'react';\n\nfunction App() {\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: 'Untitled Note',\n      body: '',\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n  };\n\n  const onUpdateNote = (updateNote) => {\n    const updatedNoteArray = notes.map((note) => {\n      if(note.id === activeNote){\n        return updateNote\n      };\n      return note;\n    })\n    setNotes(updatedNoteArray)\n  }\n\n  const onDeleteNote = (noteId) =>{\n    setNotes(notes.filter((note) => note.id !== noteId))\n  }\n\n  const getActiveNote = () => {\n    return notes.find(note => note.id === activeNote)\n  }\n\n  return (\n    <div className=\"App\">\n      <Sidebar \n        notes={notes} \n        onAddNote={onAddNote} \n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main \n        activeNote={getActiveNote()}\n        onUpdateNote={onUpdateNote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}